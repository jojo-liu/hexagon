<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jojoliu.hexagon.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.jojoliu.hexagon.model.Order">
    <id column="orderID" jdbcType="INTEGER" property="orderid" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderno" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="postID" jdbcType="INTEGER" property="postid" />
    <result column="consultantID" jdbcType="INTEGER" property="consultantid" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="payChannel" jdbcType="VARCHAR" property="paychannel" />
  </resultMap>
  <sql id="Base_Column_List">
    orderID, orderNo, createTime, price, postID, consultantID, status, payChannel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order (orderID, orderNo, createTime, 
      price, postID, consultantID, 
      status, payChannel)
    values (#{orderid,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER}, #{consultantid,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{paychannel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderID,
      </if>
      <if test="orderno != null">
        orderNo,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="postid != null">
        postID,
      </if>
      <if test="consultantid != null">
        consultantID,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paychannel != null">
        payChannel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="orderno != null">
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        #{consultantid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="paychannel != null">
        #{paychannel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    <set>
      <if test="orderno != null">
        orderNo = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        postID = #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        consultantID = #{consultantid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="paychannel != null">
        payChannel = #{paychannel,jdbcType=VARCHAR},
      </if>
    </set>
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    set orderNo = #{orderno,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=INTEGER},
      postID = #{postid,jdbcType=INTEGER},
      consultantID = #{consultantid,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      payChannel = #{paychannel,jdbcType=VARCHAR}
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.jojoliu.hexagon.model.Order">
    <id column="orderID" jdbcType="INTEGER" property="orderid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="postID" jdbcType="INTEGER" property="postid" />
    <result column="consultantID" jdbcType="INTEGER" property="consultantid" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="payChannel" jdbcType="VARCHAR" property="paychannel" />
  </resultMap>
  <sql id="Base_Column_List">
    orderID, createTime, price, postID, consultantID, status, payChannel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order (orderID, createTime, price,
      postID, consultantID, status,
      payChannel)
    values (#{orderid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{price,jdbcType=INTEGER},
      #{postid,jdbcType=INTEGER}, #{consultantid,jdbcType=INTEGER}, #{status,jdbcType=CHAR},
      #{paychannel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderID,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="postid != null">
        postID,
      </if>
      <if test="consultantid != null">
        consultantID,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paychannel != null">
        payChannel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        #{consultantid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="paychannel != null">
        #{paychannel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        postID = #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        consultantID = #{consultantid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="paychannel != null">
        payChannel = #{paychannel,jdbcType=VARCHAR},
      </if>
    </set>
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=INTEGER},
      postID = #{postid,jdbcType=INTEGER},
      consultantID = #{consultantid,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      payChannel = #{paychannel,jdbcType=VARCHAR}
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.jojoliu.hexagon.model.Order">
    <id column="orderID" jdbcType="INTEGER" property="orderid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="postID" jdbcType="INTEGER" property="postid" />
    <result column="consultantID" jdbcType="INTEGER" property="consultantid" />
  </resultMap>
  <sql id="Base_Column_List">
    orderID, createTime, price, postID, consultantID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where orderID = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order (orderID, createTime, price,
      postID, consultantID)
    values (#{orderid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{price,jdbcType=INTEGER},
      #{postid,jdbcType=INTEGER}, #{consultantid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jojoliu.hexagon.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderID,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="postid != null">
        postID,
      </if>
      <if test="consultantid != null">
        consultantID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        #{consultantid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="postid != null">
        postID = #{postid,jdbcType=INTEGER},
      </if>
      <if test="consultantid != null">
        consultantID = #{consultantid,jdbcType=INTEGER},
      </if>
    </set>
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jojoliu.hexagon.model.Order">
    update order
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=INTEGER},
      postID = #{postid,jdbcType=INTEGER},
      consultantID = #{consultantid,jdbcType=INTEGER}
    where orderID = #{orderid,jdbcType=INTEGER}
  </update>
  <!--以上为自动生成-->
  <select id="selectByConsultantid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order
    where consultantID = #{consultantid,jdbcType=Long}
  </select>
  <select id="selectBypostid" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order
    where postID = #{postid,jdbcType=Long}
  </select>
</mapper>