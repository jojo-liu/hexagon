<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jojoliu.hexagon.mapper.SessionMapper">
  <resultMap id="BaseResultMap" type="com.jojoliu.hexagon.model.Session">
    <id column="session_id" jdbcType="VARCHAR" property="sessionId" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="access_token_validTime" jdbcType="VARCHAR" property="accessTokenValidtime" />
    <result column="refresh_token_time" jdbcType="VARCHAR" property="refreshTokenTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    session_id, access_token, refresh_token, access_token_validTime, refresh_token_time, 
    create_time, update_time, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from session
    where session_id = #{sessionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from session
    where session_id = #{sessionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jojoliu.hexagon.model.Session">
    insert into session (session_id, access_token, refresh_token, 
      access_token_validTime, refresh_token_time, 
      create_time, update_time, user_id
      )
    values (#{sessionId,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, 
      #{accessTokenValidtime,jdbcType=VARCHAR}, #{refreshTokenTime,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jojoliu.hexagon.model.Session">
    insert into session
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sessionId != null">
        session_id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="accessTokenValidtime != null">
        access_token_validTime,
      </if>
      <if test="refreshTokenTime != null">
        refresh_token_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sessionId != null">
        #{sessionId,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidtime != null">
        #{accessTokenValidtime,jdbcType=VARCHAR},
      </if>
      <if test="refreshTokenTime != null">
        #{refreshTokenTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jojoliu.hexagon.model.Session">
    update session
    <set>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidtime != null">
        access_token_validTime = #{accessTokenValidtime,jdbcType=VARCHAR},
      </if>
      <if test="refreshTokenTime != null">
        refresh_token_time = #{refreshTokenTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where session_id = #{sessionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jojoliu.hexagon.model.Session">
    update session
    set access_token = #{accessToken,jdbcType=VARCHAR},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      access_token_validTime = #{accessTokenValidtime,jdbcType=VARCHAR},
      refresh_token_time = #{refreshTokenTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where session_id = #{sessionId,jdbcType=VARCHAR}
  </update>
</mapper>